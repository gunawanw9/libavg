import glob
import os
import re

import distutils.command.install_lib
from distutils.core import setup


def listDataFiles(dirPath):
    ignoreList = ['.git']
    dataFiles = []

    head, tail = os.path.split(os.path.normpath(dirPath))

    for root, _, files in os.walk(dirPath):
        if root in ignoreList:
            continue

        for file_ in files:
            fullPath = os.path.join(root, file_)
            subPath = fullPath.replace('{}{}'.format(head, os.path.sep), '')
            if '~' not in subPath:
                dataFiles.append(subPath)

    return dataFiles


# see: http://stackoverflow.com/questions/11594905/how-do-i-correctly-pass-cmake-list-semicolon-sep-of-flags-to-set-target-proper
class my_install_lib(distutils.command.install_lib.install_lib):
    def run(self):
        testBinaryRegex =  re.compile(r'^test\w+$')

        distutils.command.install_lib.install_lib.run(self)

        for fn in self.get_outputs():
            # Hack to set executable bit for libavg cpptest
            basename = os.path.basename(fn)
            if testBinaryRegex.match(basename) or basename == 'Test.py':
                mode = ((os.stat(fn).st_mode) | 0555) & 07777
                os.chmod(fn, mode)


setup(name='libavg',
    version='${AVG_VERSION_RELEASE}',
    packages=[
        'libavg',
        'libavg.app',
        'libavg.widget',
    ],
    package_data={
        '': listDataFiles(os.path.join('libavg', 'data')) +
            listDataFiles(os.path.join('libavg', 'shaders')) +
            listDataFiles(os.path.join('libavg', 'plugin')) +
            listDataFiles(os.path.join('libavg', 'test')) +
            ['avg.so', ]
    },
    cmdclass={
        'install_lib': my_install_lib
    },
    scripts=glob.glob('scripts/avg_*'),
)

